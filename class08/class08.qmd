---
title: "Class 8: PCA Mini Project"
author: "Olivia Baldwin"
format: pdf
---

Side Note: 

Let's look at the mean value of every column in the `mtcars` dataset.

```{r}
apply(mtcars, 2, mean) 

#'2' is for colunms, '1' is for rows for the middle argument
```

Let's look at "spread" via `sd()`. 

```{r}
apply(mtcars, 2, sd)
```

If we do a PCA without scaling then the PCA will pick up the columns with the most spread (for this example: disp and hp)

```{r}
pca <- prcomp(mtcars)
biplot(pca)
```

Let's try it again with scaling

```{r}
mtscale <- scale(mtcars)
head(mtscale)
```

```{r}
round(apply(mtscale, 2, mean), 3) 
apply(mtscale, 2, sd)
```

Let's plot mpg vs disp to see if the data relationships change. (they don't)

```{r}
library(ggplot2)

#plot mpg vs. disp for mtcars and mtscale
ggplot(mtcars, aes(mpg, disp)) + geom_point()
ggplot(mtscale, aes(mpg, disp)) + geom_point()

```

Let's rerun the PCA with scaled data. 

```{r}
pca2 <- prcomp(mtscale)
biplot(pca2)
```


## Breast Cancer FNA Data

```{r}
fna.data <- "WisconsinCancer.csv"

wisc.df <- read.csv(fna.data, row.names = 1)
head(wisc.df)
```

```{r}
wisc.data <- wisc.df[,-1]
wisc.data <- wisc.data[,-31]
View(wisc.data)
```

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
```


>Q1: 569 patients (rows) and 30 observations (columns, minus the diagnosis and "X" that we took out, so if included it is 32) 

>Q2: 212 patients are "M" for malignant 

>Q3: There are 10 column names (features) in the dataset that end in "_mean"

```{r}
dim(wisc.data)
table(diagnosis)
length(grep("_mean", colnames(wisc.data))) 
```

```{r}
round(apply(wisc.data, 2, mean), 3)
round(apply(wisc.data,2,sd), 3)
```

**PCA**
We should scale the data based on the means and sd of the dataset being very different. 

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary <- summary(wisc.pr)
summary
```

Scree Plot:

```{r}
plot(summary$importance[2,], typ="b")
```

>Q4: The first PCA captures 44.27% of the total variance. 

>Q5: By PCA3, over 70% of the variance is captured. 

>Q6: By PCA7, over 90% of the variance is captured. 


```{r}
biplot(wisc.pr)
```

>Q7: This plot is very hard to read. Even making it bigger, there are too many data points listed as large numbers that overlap making it uninterpretable. Also, all 30 of the axis are included, and those are just as hard to read. 

Main PC result plot: 

```{r}
plot(wisc.pr$x, col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```

>Q8: The red points (malignant) are generally towards the left (in the negative of PC1) and the black points (benign) are generally towards the right (in the positive of PC1). 

Plot of PC1 vs PC3: 

```{r}
plot(wisc.pr$x[, 1], wisc.pr$x[, 3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```

Use ggplot to make a scatter plot of the PCA data.

```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

library(ggplot2)

ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

**Variance**

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <- pr.var / sum(pr.var)
head(pve)
```

```{r}
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

Alternative scree plot

```{r}
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

>Q9: -0.261 is the concave.points_means value for the first principle component. The first component is important since the number is higher than others (neg/pos doesn't matter). By looking at other components, they are closer to 0 (at least for the 2, 3, and 4 that I checked). Higher the value means that it is more important/has more influence than the others. 

```{r}
round(wisc.pr$rotation[,1], 3)
```

```{r}
round(wisc.pr$rotation[,4], 3)
```


**Hierarchical Clustering**

Scale the data, then calculate the Euclidean distance and create clusters.
```{r}
data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)

wisc.hclust <- hclust(data.dist, method="complete") 
```

>Q10: There are 4 clusters at a height of about 19. 

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, 4)

table(wisc.hclust.clusters, diagnosis)
```


>Q12: The ward.D2 is the best because it has two clear, tall "goal posts" that seperate clear clusters. 

```{r}
hclust_single <- hclust(data.dist, method="single")
hclust_average <- hclust(data.dist, method="average")
hclust_ward <- hclust(data.dist, method="ward.D2")

plot(hclust_single)
plot(hclust_average)
plot(hclust_ward)
```

**Combining Methods**

Use PCA results to include the number of PCs needed to describe *90%* of the variance and link with the ward.D2 method. 

```{r}
dist7 <- dist(wisc.pr$x[,1:7])
wisc.pr.hclust <- hclust(dist7, method="ward.D2")
plot(wisc.pr.hclust)
abline(h=60, col="red", lty=2)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

3D Graph (graph shows up as pop up): 

```{r}
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```

The colors switched on the 2D plots, and can be edited if convert grps to factor and rearrange the order. Both the grps graph and diagnosis are showing similar patterns. 

```{r}
g <- as.factor(grps)
g <- relevel(g,2)
plot(wisc.pr$x[,1:2], col=g)
```

Cut the model into 2 clusters:

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```

>Q13: It does ok, there are still about 60 misdiagnoses in model. Which, when talking about cancer, close to 60 wrong diagnosis is a big deal. 

```{r}
table(wisc.hclust.clusters, diagnosis)
table(diagnosis, grps)
```

>Q14: The non-PCA models are even worse, especially when cut into 4 groups. This would not be helpful at all in diagnosis. In groups 2 and 4, they are so small and cluster 2 is split very unhelpfully. 


**Prediction**

Load in a new data set. Use the wisc data set to predict diagnosis.  

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

Plot the PCA for the new data. The blue points label the 2 new patients. The colors are divided by the groups created earlier for the wisc data. 

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

>Q16: Based on our model, patient 2 should be prioritized as they are more similar to the "malignant" group from out training data (wisc). 

